name: 'Rollout kubernetes deployment'
description: 'A GitHub Action that will rollout restart a deployment in kubernetes'
inputs:
  azure_credentials:
    description: 'Credentials to login into azure'
    required: true
  manifest:
    description: 'Directory for thek8s manifest'
    required: true
    default: ""
  cluster_name:
    description: 'Name of the cluster in azure'
    required: true
  resource_group:
    description: 'Name of the resource group of the aks cluster'
    required: true
  subscription:
    description: 'Id of the subscription of the aks cluster'
    required: true
  deploy:
    description: 'Name of the deployment to restart'
    required: true
  namespace:
    description: 'Namespace of the deployment to restart'
    required: true
runs:
  using: 'composite'
  steps:
    - name: Install Brew and kubelogin
      shell: bash
      run: |
        export PATH="/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin:$PATH"
        brew install Azure/kubelogin/kubelogin
        brew update
        brew upgrade Azure/kubelogin/kubelogin

    - name: Log in with Azure
      uses: azure/login@v1.4.7
      with:
        creds: ${{ inputs.azure_credentials }}

    - name: Get Cluster Credentials
      shell: bash
      run: |
        export PATH="/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin:$PATH"
        az aks get-credentials -n ${{ inputs.cluster_name }} -g ${{ inputs.resource_group }} --overwrite-existing --subscription ${{ inputs.subscription }}
        kubelogin convert-kubeconfig -l azurecli
        
    - name: (Optional) Run manifest
      shell: bash
      run: |
        if [ -f ${{ inputs.manifest }} ]; then kubectl apply -f ${{ inputs.manifest }} -n ${{ inputs.namespace }}; fi

    - name: Redeploy app
      shell: bash
      run: |
        export PATH="/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin:$PATH"
        kubectl rollout restart deploy ${{ inputs.deploy }} --namespace ${{ inputs.namespace }}

    - name: logout
      shell: bash
      run: |
        az logout
      if: always()